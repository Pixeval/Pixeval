<!--
Pixeval - A Strong, Fast and Flexible Pixiv Client
Copyright (C) 2019-2020 Dylech30th

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.-->

<Application x:Class="Pixeval.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             xmlns:valueConverters="clr-namespace:Pixeval.Objects.ValueConverters"
             StartupUri="UI/SignIn.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                <ResourceDictionary>
                    <!--  ReSharper disable Xaml.RedundantResource  -->
                    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="#007CEE" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="MaterialDesignToolButtonWithGrayWaveEffect"
                   BasedOn="{StaticResource MaterialDesignToolButton}"
                   TargetType="Button">
                <Style.Resources>
                    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="Gray" />
                </Style.Resources>
            </Style>
            <system:Double x:Key="Two">
                2
            </system:Double>
            <CubicEase x:Key="CubicEase" EasingMode="EaseOut" />
            <PowerEase x:Key="QuinticEase"
                       EasingMode="EaseInOut"
                       Power="1" />
            <valueConverters:EnumToStringConverter x:Key="EnumToStringConverter" />
            <valueConverters:DownloadQueueEmptyNotifierConverter x:Key="DownloadQueueEmptyNotifierConverter" />
            <valueConverters:VisibleIfTrueConverter x:Key="VisibleIfTrueConverter" />
            <valueConverters:VisibleIfFalseConverter x:Key="VisibleIfFalseConverter" />
            <valueConverters:DoublePlusConverter x:Key="DoublePlusConverter" />
            <valueConverters:IllustSubscriptConverter x:Key="IllustSubscriptConverter" />
            <valueConverters:DateTimeOffsetConverter x:Key="DateTimeOffsetConverter" />
            <valueConverters:DoubleDivisionConverter x:Key="DoubleDivisionConverter" />
            <valueConverters:BoolToCachingPolicyConverter x:Key="BoolToCachingPolicyConverter" />
            <valueConverters:IllustrationMatchConditionMaskConverter x:Key="IllustrationMatchConditionMaskConverter" />
            <valueConverters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
            <valueConverters:TrendsStatConverter x:Key="TrendsStatConverter" />
            <valueConverters:DateTimeConverter x:Key="DateTimeConverter" />
            <valueConverters:MultiCultureConverter x:Key="MultiCultureConverter" />
            <valueConverters:TagMatchEnumToModelConverter x:Key="TagMatchEnumToModelConverter" />
            <Style x:Key="RoundedCornerProgressBar" TargetType="{x:Type ProgressBar}">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}" />
                <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Height" Value="4" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="OnLoaded">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TemplateRoot"
                                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TemplateRoot"
                                                                   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TemplateRoot"
                                                                   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="OnLoadedNoAnimation">
                                    <DoubleAnimation Storyboard.TargetName="TemplateRoot"
                                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                                     To="1"
                                                     Duration="0" />
                                    <DoubleAnimation Storyboard.TargetName="TemplateRoot"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                     To="1"
                                                     Duration="0" />
                                    <DoubleAnimation Storyboard.TargetName="TemplateRoot"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                     To="1"
                                                     Duration="0" />
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid x:Name="TemplateRoot"
                                  Opacity="0"
                                  RenderTransformOrigin="0,0.5">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0" ScaleY="0" />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="3" />
                                <Rectangle x:Name="PART_Track" />
                                <Grid x:Name="PART_Indicator"
                                      HorizontalAlignment="Left"
                                      ClipToBounds="true">
                                    <Rectangle x:Name="Indicator"
                                               Fill="{TemplateBinding Foreground}"
                                               RadiusX="3"
                                               RadiusY="3" />
                                    <Rectangle x:Name="Animation"
                                               Fill="{TemplateBinding Foreground}"
                                               RadiusX="3"
                                               RadiusY="3"
                                               RenderTransformOrigin="0.5,0.5">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Determinate" />
                                        <VisualState x:Name="Indeterminate">
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation"
                                                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation"
                                                                              Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                                    <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                                                    <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                                                    <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                                                </PointAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="materialDesign:TransitionAssist.DisableTransitions" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Name="BeginStoryboardOnLoadedNoAnimation"
                                                         Storyboard="{StaticResource OnLoadedNoAnimation}" />
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <RemoveStoryboard BeginStoryboardName="BeginStoryboardOnLoadedNoAnimation" />
                                    </Trigger.ExitActions>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsVisible" Value="True" />
                                        <Condition Property="materialDesign:TransitionAssist.DisableTransitions"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard Name="BeginStoryboardOnLoaded"
                                                         Storyboard="{StaticResource OnLoaded}" />
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <RemoveStoryboard BeginStoryboardName="BeginStoryboardOnLoaded" />
                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsIndeterminate" Value="true">
                                    <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle Width="Auto"
                                           Height="Auto"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch"
                                           Fill="Transparent" />
                                <Border x:Name="Rectangle1"
                                        Width="Auto"
                                        Height="Auto"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="5" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag" Value="Horizontal">
                                    <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                    <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                <Setter Property="Foreground" Value="#8C8C8C" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Width" Value="8" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot"
                                  Width="8"
                                  Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.00001*" />
                                </Grid.RowDefinitions>
                                <Track x:Name="PART_Track"
                                       Grid.Row="0"
                                       Focusable="false"
                                       IsDirectionReversed="true">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb"
                                               Background="{TemplateBinding Foreground}"
                                               Style="{DynamicResource ScrollThumbs}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp"
                                                      Command="ScrollBar.PageDownCommand"
                                                      Focusable="false"
                                                      Opacity="0" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown"
                                                      Command="ScrollBar.PageUpCommand"
                                                      Focusable="false"
                                                      Opacity="0" />
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Thumb" Property="Background"
                                            Value="{DynamicResource ButtonSelectBrush}" />
                                </Trigger>
                                <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                    <Setter TargetName="Thumb" Property="Background"
                                            Value="{DynamicResource DarkBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter TargetName="GridRoot" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width" Value="Auto" />
                                    <Setter Property="Height" Value="8" />
                                    <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                    <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                    <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ReleaseImageStyle" TargetType="Image">
                <Style.Triggers>
                    <Trigger Property="IsVisible" Value="False">
                        <Setter Property="Source" Value="{x:Null}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>