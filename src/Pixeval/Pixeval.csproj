<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetFramework>net8.0-windows10.0.22621.0</TargetFramework>
        <TargetPlatformMinVersion>10.0.19041.0</TargetPlatformMinVersion>
        <RootNamespace>Pixeval</RootNamespace>
        <Platforms>x86;x64;ARM64</Platforms>
        <RuntimeIdentifiers>win-x86;win-x64;win-arm64</RuntimeIdentifiers>
        <ApplicationManifest>app.manifest</ApplicationManifest>
        <Nullable>enable</Nullable>
        <UseWinUI>true</UseWinUI>
        <EnableMsixTooling>true</EnableMsixTooling>
        <EnableDefaultPriItems>false</EnableDefaultPriItems>
        <DefaultLanguage>zh-CN</DefaultLanguage>
        <LangVersion>preview</LangVersion>
        <Configurations>Debug;Release</Configurations>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <PublishAot>false</PublishAot>
        <PublishProfile Condition="'$(PublishAot)' == 'true'">win-$(Platform).pubxml</PublishProfile>
        <WindowsPackageType>MSIX</WindowsPackageType>
        <NoWarn>NU1904;$(NoWarn)</NoWarn>
        <MinVerTagPrefix>v</MinVerTagPrefix>
    </PropertyGroup>

	<ItemGroup>
		<PackageReference Include="CommunityToolkit.Labs.WinUI.Controls.MarkdownTextBlock" />
		<PackageReference Include="CommunityToolkit.Labs.WinUI.Shimmer" />
		<PackageReference Include="CommunityToolkit.Labs.WinUI.TitleBar" />
		<PackageReference Include="CommunityToolkit.Labs.WinUI.TokenView" />
		<PackageReference Include="CommunityToolkit.WinUI.Behaviors" />
		<PackageReference Include="CommunityToolkit.WinUI.Collections" />
		<PackageReference Include="CommunityToolkit.WinUI.Animations" />
		<PackageReference Include="CommunityToolkit.WinUI.Controls.ColorPicker" />
		<PackageReference Include="CommunityToolkit.WinUI.Controls.Primitives" />
		<PackageReference Include="CommunityToolkit.WinUI.Controls.Segmented" />
		<PackageReference Include="CommunityToolkit.WinUI.Controls.SettingsControls" />
		<PackageReference Include="CommunityToolkit.WinUI.Controls.TokenizingTextBox" />
		<PackageReference Include="CommunityToolkit.WinUI.Converters" />
		<PackageReference Include="CommunityToolkit.WinUI.Media" />
		<PackageReference Include="CommunityToolkit.Diagnostics" />
		<PackageReference Include="CommunityToolkit.Mvvm" />
		<PackageReference Include="FluentIcons.WinUI" />
		<PackageReference Include="JsonPoke" />
		<PackageReference Include="LiteDB" />
		<PackageReference Include="Microsoft.Extensions.DependencyInjection" />
		<PackageReference Include="Microsoft.IO.RecyclableMemoryStream" />
		<PackageReference Include="Microsoft.Windows.SDK.BuildTools" />
		<PackageReference Include="Microsoft.WindowsAppSDK" />
		<PackageReference Include="Microsoft.Xaml.Behaviors.WinUI.Managed" />
		<PackageReference Include="Microsoft.Windows.CsWin32">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="MinVer">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="PininSharp" />
		<PackageReference Include="Pixeval.Extensions.Common" />
		<!--<PackageReference Include="Pixeval.Bypass" />-->
		<PackageReference Include="Pixeval.QRCoder" />
		<PackageReference Include="QuestPDF" />
		<PackageReference Include="ReverseMarkdown" />
		<PackageReference Include="SixLabors.ImageSharp" />
		<PackageReference Include="SixLabors.ImageSharp.Drawing" />
		<PackageReference Include="System.Linq.Async" />
		<PackageReference Include="WinUI3Utilities" />
		<ProjectReference Include="..\Pixeval.Caching\Pixeval.Caching.csproj" />
		<ProjectReference Include="..\Pixeval.Controls\Pixeval.Controls.csproj" />
		<ProjectReference Include="..\Pixeval.CoreApi\Pixeval.CoreApi.csproj" />
		<ProjectReference Include="..\Pixeval.Utilities\Pixeval.Utilities.csproj" />
		<ProjectReference Include="..\Pixeval.SourceGen\Pixeval.SourceGen.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="False" />
		<Manifest Include="$(ApplicationManifest)" />
	</ItemGroup>

	<!--Exposes PRI resources-->
	<Target Name="InjectAdditionalFiles" BeforeTargets="GenerateMSBuildEditorConfigFileShouldRun">
		<RemoveDir Directories="Generated" />
		<ItemGroup>
			<TextFiles Include="%(TextFile.OutputTarget)">
				<Key>$([System.String]::Copy('%(TextFile.Key)').Replace('_', '/'))</Key>
				<Content>$([System.IO.File]::ReadAllText(%(FullPath)))</Content>
			</TextFiles>
		</ItemGroup>
		<WriteLinesToFile Condition="%(TextFiles.Identity) != ''" File="%(TextFiles.Identity)" Overwrite="true" Lines="{}" />
		<JsonPoke Condition="%(TextFiles.Identity) != ''" ContentPath="%(TextFiles.Identity)" Query="$['%(TextFiles.Key)']" Value="%(TextFiles.Content)"></JsonPoke>
		<ItemGroup>
			<PRIResource Include="@(TextFiles)" />
			<AdditionalFiles Include="@(PRIResource)" SourceItemGroup="PRIResource" />
		</ItemGroup>
	</Target>
	<ItemGroup>
		<CompilerVisibleItemMetadata Include="AdditionalFiles" MetadataName="SourceItemGroup" />

		<TextFile Include="Strings\*\*.md">
			<OutputTarget>Generated\%(RecursiveDir)TextGenerated.resjson</OutputTarget>
			<Key>%(Filename)</Key>
		</TextFile>
		<TextFile Include="Strings\*\*.txt">
			<OutputTarget>Generated\%(RecursiveDir)TextGenerated.resjson</OutputTarget>
			<Key>%(Filename)</Key>
		</TextFile>

		<PRIResource Include="Assets\Svg.resw" />
		<PRIResource Include="Strings\*\*.resjson" />
		<PRIResource Include="Strings\*\*.resw" />
	</ItemGroup>

	<!--PackageManifest-->
	<PropertyGroup>
		<IncludePackageReferencesDuringMarkupCompilation>true</IncludePackageReferencesDuringMarkupCompilation>
		<GenerateAppInstallerFile>False</GenerateAppInstallerFile>
		<AppxPackageSigningEnabled>False</AppxPackageSigningEnabled>
		<AppxPackageSigningTimestampDigestAlgorithm>SHA256</AppxPackageSigningTimestampDigestAlgorithm>
		<AppxAutoIncrementPackageRevision>False</AppxAutoIncrementPackageRevision>
		<AppxSymbolPackageEnabled>True</AppxSymbolPackageEnabled>
		<GenerateTestArtifacts>True</GenerateTestArtifacts>
		<AppxBundle>Always</AppxBundle>
		<AppInstallerUri>%UserProfile%\Desktop</AppInstallerUri>
		<HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>
		<GenerateTemporaryStoreCertificate>True</GenerateTemporaryStoreCertificate>
		<AppxBundlePlatforms>x86|x64|arm64</AppxBundlePlatforms>
	</PropertyGroup>

	<ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
		<ProjectCapability Include="Msix" />
	</ItemGroup>

	<PropertyGroup Condition="'$(DisableHasPackageAndPublishMenuAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
		<HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
	</PropertyGroup>
</Project>
