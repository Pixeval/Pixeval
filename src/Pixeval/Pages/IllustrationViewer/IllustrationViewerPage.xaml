<controls:SupportCustomTitleBarDragRegionPage
    x:Class="Pixeval.Pages.IllustrationViewer.IllustrationViewerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Pixeval.Controls"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    xmlns:converters1="using:Pixeval.Controls.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:Pixeval.Pages.IllustrationViewer"
    xmlns:markup="using:Pixeval.Controls.MarkupExtensions"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:media="using:Microsoft.Xaml.Interactions.Media"
    xmlns:triggers="using:Pixeval.Util.Triggers"
    KeyboardAcceleratorPlacementMode="Hidden"
    Loaded="IllustrationViewerPage_OnLoaded"
    Unloaded="IllustrationViewerPage_OnUnloaded"
    mc:Ignorable="d">
    <controls:EnhancedWindowPage.Resources>
        <ThemeShadow x:Name="SidePanelShadow" />
        <converters:BoolNegationConverter x:Key="BoolNegationConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters1:NumberToPercentageConverter x:Key="NumberToPercentageConverter" />
        <converters1:NullableToVisibilityConverter x:Key="NullableToVisibilityConverter" />
        <converters1:DisplayIndexConverter x:Key="DisplayIndexConverter" />
        <AcrylicBrush
            x:Key="BottomCommandSectionBackground"
            FallbackColor="{StaticResource SecondaryAccentColor}"
            TintColor="{StaticResource SecondaryAccentColor}"
            TintLuminosityOpacity="0.8"
            TintOpacity="0.8" />
        <SolidColorBrush x:Key="TransparentBrush" Color="Transparent" />
        <Thickness x:Key="NormalMargin">0,48,0,0</Thickness>
        <Thickness x:Key="FullScreenMargin">0</Thickness>
        <x:Double x:Key="TitleBarHeight">48</x:Double>
        <x:Double x:Key="NegativeTitleBarHeight">-48</x:Double>
        <Style
            x:Key="TextBlockStyle"
            BasedOn="{StaticResource BaseTextBlockStyle}"
            TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="{StaticResource PixevalContentFontSize}" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="HorizontalTextAlignment" Value="Center" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        </Style>
    </controls:EnhancedWindowPage.Resources>
    <Page.KeyboardAccelerators>
        <KeyboardAccelerator
            Key="Escape"
            Invoked="ExitFullScreenKeyboardAccelerator_OnInvoked"
            Modifiers="None" />
    </Page.KeyboardAccelerators>
    <SplitView
        x:Name="IllustrationInfoAndCommentsSplitView"
        DisplayMode="Overlay"
        OpenPaneLength="330"
        PaneBackground="Transparent"
        PaneClosed="IllustrationInfoAndCommentsSplitView_OnPaneOpenedOrClosed"
        PaneOpened="IllustrationInfoAndCommentsSplitView_OnPaneOpenedOrClosed">
        <SplitView.Pane>
            <Grid
                Width="320"
                HorizontalAlignment="Left"
                Background="{StaticResource SystemControlBackgroundChromeMediumLowBrush}"
                Shadow="{x:Bind SidePanelShadow}"
                Translation="0,0,40">
                <NavigationView
                    x:Name="InfoPaneNavigationView"
                    IsBackButtonVisible="Collapsed"
                    IsSettingsVisible="False"
                    PaneDisplayMode="Top"
                    SelectionChanged="IllustrationInfoAndCommentsNavigationViewOnSelectionChanged">
                    <NavigationView.MenuItems>
                        <NavigationViewItem
                            x:Uid="/IllustrateViewerPage/IllustrationInfoTab"
                            IsSelected="True"
                            Tag="{x:Bind _viewModel.IllustrationInfoTag}" />
                        <NavigationViewItem x:Uid="/IllustrateViewerPage/CommentsTab" Tag="{x:Bind _viewModel.CommentsTag}" />
                        <NavigationViewItem x:Uid="/IllustrateViewerPage/RelatedWorksTab" Tag="{x:Bind _viewModel.RelatedWorksTag}" />
                    </NavigationView.MenuItems>
                    <Frame x:Name="IllustrationInfoAndCommentsFrame" Width="320" />
                </NavigationView>
            </Grid>
        </SplitView.Pane>
        <Grid x:Name="IllustrationPresenterDockPanel" HorizontalAlignment="Stretch">
            <!--  ReSharper disable once UnusedMember.Local  -->
            <Grid x:Name="ImagePanel" Margin="{StaticResource NormalMargin}">
                <Frame
                    x:Name="IllustrationImageShowcaseFrame"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Tapped="IllustrationImageShowcaseFrame_OnTapped" />

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="150" />
                    </Grid.ColumnDefinitions>
                    <Grid
                        Grid.Column="0"
                        Width="150"
                        Opacity="0">
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="PointerEntered">
                                <core:ChangePropertyAction PropertyName="Opacity" Value="1" />
                            </core:EventTriggerBehavior>
                            <core:EventTriggerBehavior EventName="PointerExited">
                                <core:ChangePropertyAction PropertyName="Opacity" Value="0" />
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        <Button
                            Width="50"
                            Height="100"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{markup:FontSymbolIcon Glyph=ChevronLeft20F743}"
                            RightTapped="PrevButton_OnRightTapped"
                            Style="{StaticResource AccentButtonStyle}"
                            Tapped="PrevButton_OnTapped"
                            ToolTipService.ToolTip="{x:Bind _viewModel.PrevButtonText, Mode=OneWay}"
                            Visibility="{x:Bind _viewModel.PrevButtonText, Converter={StaticResource NullableToVisibilityConverter}, Mode=OneWay}" />
                    </Grid>
                    <Grid
                        Grid.Column="2"
                        Width="150"
                        Opacity="0">
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="PointerEntered">
                                <core:ChangePropertyAction PropertyName="Opacity" Value="1" />
                            </core:EventTriggerBehavior>
                            <core:EventTriggerBehavior EventName="PointerExited">
                                <core:ChangePropertyAction PropertyName="Opacity" Value="0" />
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        <Button
                            Width="50"
                            Height="100"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{markup:FontSymbolIcon Glyph=ChevronRight20F745}"
                            RightTapped="NextButton_OnRightTapped"
                            Style="{StaticResource AccentButtonStyle}"
                            Tapped="NextButton_OnTapped"
                            ToolTipService.ToolTip="{x:Bind _viewModel.NextButtonText, Mode=OneWay}"
                            Visibility="{x:Bind _viewModel.NextButtonText, Converter={StaticResource NullableToVisibilityConverter}, Mode=OneWay}" />
                    </Grid>
                </Grid>

                <!--  工具栏的识别区  -->
                <StackPanel
                    x:Name="BottomCommandSection"
                    Margin="0,0,0,20"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    Spacing="20">
                    <StackPanel.TranslationTransition>
                        <Vector3Transition Duration="0:0:0.300" />
                    </StackPanel.TranslationTransition>
                    <Grid
                        Width="400"
                        Height="100"
                        Background="Transparent"
                        Opacity="0">
                        <Grid.OpacityTransition>
                            <ScalarTransition />
                        </Grid.OpacityTransition>
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="PointerEntered">
                                <core:ChangePropertyAction PropertyName="Opacity" Value="1" />
                            </core:EventTriggerBehavior>
                            <core:EventTriggerBehavior EventName="PointerExited">
                                <core:ChangePropertyAction PropertyName="Opacity" Value="0" />
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        <!--  ReSharper disable once UnusedMember.Local  -->
                        <Border
                            x:Name="CommandBorder"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="{StaticResource BottomCommandSectionBackground}"
                            BorderBrush="{StaticResource SecondaryAccentBorderBrush}"
                            BorderThickness="0.5"
                            CornerRadius="{ThemeResource ControlCornerRadius}"
                            Opacity="0.7"
                            Translation="0,0,30">
                            <Border.Shadow>
                                <ThemeShadow x:Name="CommandBorderDropShadow" />
                            </Border.Shadow>
                            <Border.OpacityTransition>
                                <ScalarTransition />
                            </Border.OpacityTransition>
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="PointerEntered">
                                    <core:ChangePropertyAction PropertyName="Opacity" Value="1" />
                                </core:EventTriggerBehavior>
                                <core:EventTriggerBehavior EventName="PointerExited">
                                    <core:ChangePropertyAction PropertyName="Opacity" Value="0.7" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <PipsPager
                                    x:Name="PipsPager"
                                    Grid.Row="0"
                                    Margin="5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    MaxVisiblePips="10"
                                    NextButtonVisibility="Visible"
                                    NumberOfPages="{x:Bind _viewModel.PageCount, Mode=OneWay}"
                                    PreviousButtonVisibility="Visible"
                                    SelectedPageIndex="{x:Bind _viewModel.CurrentPageIndex, Mode=TwoWay}"
                                    Visibility="{x:Bind _viewModel.CurrentIllustration.IsManga, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" />
                                <CommandBar
                                    Grid.Row="1"
                                    DefaultLabelPosition="Collapsed"
                                    OverflowButtonVisibility="Collapsed">
                                    <AppBarButton Width="50" Command="{x:Bind _viewModel.CurrentIllustration.BookmarkCommand, Mode=OneWay}" />
                                    <AppBarButton
                                        Width="50"
                                        Command="{x:Bind _viewModel.CurrentImage.RotateCounterclockwiseCommand, Mode=OneWay}"
                                        Icon="{markup:FontSymbolIcon Glyph=RotateE7AD,
                                                                     FlowDirection=RightToLeft,
                                                                     MirroredWhenRightToLeft=True}" />
                                    <AppBarToggleButton
                                        Width="50"
                                        Command="{x:Bind _viewModel.CurrentImage.MirrorCommand, Mode=OneWay}"
                                        IsChecked="{x:Bind _viewModel.CurrentImage.IsMirrored, Mode=OneWay}" />
                                    <AppBarButton Width="50" Command="{x:Bind _viewModel.CurrentImage.RotateClockwiseCommand, Mode=OneWay}" />
                                    <AppBarButton Width="50" Command="{x:Bind _viewModel.CurrentImage.SaveCommand, Mode=OneWay}" />
                                </CommandBar>
                            </Grid>
                        </Border>
                    </Grid>
                    <Grid
                        Margin="150,0"
                        HorizontalAlignment="Center"
                        Background="{StaticResource BottomCommandSectionBackground}"
                        BorderBrush="{StaticResource SecondaryAccentBorderBrush}"
                        BorderThickness="0.5"
                        CornerRadius="{ThemeResource ControlCornerRadius}"
                        Translation="0,0,30">
                        <Grid.Shadow>
                            <ThemeShadow x:Name="ThumbnailListDropShadow" />
                        </Grid.Shadow>
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="PointerEntered">
                                <core:ChangePropertyAction
                                    PropertyName="PointerNotInArea"
                                    TargetObject="{x:Bind}"
                                    Value="false" />
                            </core:EventTriggerBehavior>
                            <core:EventTriggerBehavior EventName="PointerExited">
                                <core:ChangePropertyAction
                                    PropertyName="PointerNotInArea"
                                    TargetObject="{x:Bind}"
                                    Value="true" />
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        <controls:AdvancedItemsView
                            x:Name="ThumbnailItemsView"
                            Margin="5"
                            Padding="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            ItemsSource="{x:Bind _viewModel.Illustrations}"
                            LayoutType="HorizontalStack"
                            MinItemHeight="80"
                            MinItemWidth="80"
                            SelectedIndex="{x:Bind _viewModel.CurrentIllustrationIndex, Mode=TwoWay}"
                            SelectionMode="Single">
                            <controls:AdvancedItemsView.ItemTemplate>
                                <DataTemplate x:DataType="controls:IllustrationItemViewModel">
                                    <ItemContainer Width="80" Height="80">
                                        <Image
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            DataContext="{x:Bind}"
                                            DataContextChanged="FrameworkElement_OnDataContextChanged"
                                            Source="{x:Bind ThumbnailSource, Mode=OneWay}"
                                            Stretch="UniformToFill" />
                                    </ItemContainer>
                                </DataTemplate>
                            </controls:AdvancedItemsView.ItemTemplate>
                        </controls:AdvancedItemsView>
                    </Grid>
                </StackPanel>
            </Grid>

            <!--  ReSharper disable once UnusedMember.Local  -->
            <Grid
                x:Name="TitleBarBorder"
                Height="100"
                VerticalAlignment="Top">
                <interactivity:Interaction.Behaviors>
                    <triggers:EventWithConditionTriggerBehavior EventName="PointerEntered" IsActive="{x:Bind _viewModel.IsFullScreen, Mode=OneWay}">
                        <media:ControlStoryboardAction>
                            <media:ControlStoryboardAction.Storyboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="TopCommandBarTranslation"
                                        Storyboard.TargetProperty="Y"
                                        To="0">
                                        <DoubleAnimation.EasingFunction>
                                            <ExponentialEase EasingMode="EaseOut" Exponent="7" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </media:ControlStoryboardAction.Storyboard>
                        </media:ControlStoryboardAction>
                    </triggers:EventWithConditionTriggerBehavior>
                    <triggers:EventWithConditionTriggerBehavior EventName="PointerExited" IsActive="{x:Bind _viewModel.IsFullScreen, Mode=OneWay}">
                        <media:ControlStoryboardAction>
                            <media:ControlStoryboardAction.Storyboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="TopCommandBarTranslation"
                                        Storyboard.TargetProperty="Y"
                                        To="{StaticResource NegativeTitleBarHeight}">
                                        <DoubleAnimation.EasingFunction>
                                            <ExponentialEase EasingMode="EaseOut" Exponent="7" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </media:ControlStoryboardAction.Storyboard>
                        </media:ControlStoryboardAction>
                    </triggers:EventWithConditionTriggerBehavior>
                </interactivity:Interaction.Behaviors>
                <!--  ReSharper disable once UnusedMember.Local  -->
                <Grid
                    x:Name="TitleBarArea"
                    Height="{StaticResource TitleBarHeight}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top">
                    <Grid.RenderTransform>
                        <TranslateTransform x:Name="TopCommandBarTranslation" />
                    </Grid.RenderTransform>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <!--  ReSharper disable once UnusedMember.Local  -->
                        <ColumnDefinition x:Name="TitleControlButtonsColumn" Width="150" />
                    </Grid.ColumnDefinitions>
                    <controls:TitleBarIconText
                        x:Name="TitleBar"
                        Title="{x:Bind _viewModel.CurrentIllustration.Illustrate.Title, Mode=OneWay}"
                        Grid.Column="0" />
                    <CommandBar
                        x:Name="IllustrationViewerCommandBar"
                        Grid.Column="1"
                        HorizontalAlignment="Center"
                        DefaultLabelPosition="Collapsed">
                        <AppBarToggleButton Command="{x:Bind _viewModel.IllustrationInfoAndCommentsCommand}" IsChecked="{x:Bind IllustrationInfoAndCommentsSplitView.IsPaneOpen, Mode=TwoWay}" />
                        <AppBarButton Command="{x:Bind _viewModel.CurrentImage.PlayGifCommand, Mode=OneWay}" Visibility="{x:Bind _viewModel.CurrentIllustration.IsUgoira, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" />
                        <AppBarSeparator />
                        <AppBarButton Command="{x:Bind _viewModel.CurrentImage.CopyCommand, Mode=OneWay}" />
                        <AppBarButton Command="{x:Bind _viewModel.CurrentImage.SaveCommand, Mode=OneWay}" />
                        <AppBarButton Command="{x:Bind _viewModel.CurrentImage.SaveAsCommand, Mode=OneWay}" />
                        <AppBarSeparator />
                        <AppBarButton Command="{x:Bind _viewModel.CurrentImage.SetAsCommand, Mode=OneWay}">
                            <AppBarButton.Flyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem Command="{x:Bind _viewModel.CurrentImage.SetAsBackgroundCommand, Mode=OneWay}" />
                                    <MenuFlyoutItem Command="{x:Bind _viewModel.CurrentImage.SetAsLockScreenCommand, Mode=OneWay}" />
                                </MenuFlyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>
                        <AppBarSeparator />
                        <AppBarButton Command="{x:Bind _viewModel.CurrentIllustration.AddToBookmarkCommand, Mode=OneWay}" />
                        <AppBarButton
                            x:Name="GenerateLinkButton"
                            Command="{x:Bind _viewModel.CurrentIllustration.GenerateLinkCommand, Mode=OneWay}"
                            CommandParameter="{x:Bind GenerateLinkTeachingTip}" />
                        <AppBarButton Command="{x:Bind _viewModel.CurrentIllustration.GenerateWebLinkCommand, Mode=OneWay}" CommandParameter="{x:Bind}" />
                        <AppBarButton Command="{x:Bind _viewModel.CurrentIllustration.OpenInWebBrowserCommand, Mode=OneWay}" />
                        <AppBarButton
                            x:Name="ShowQrCodeButton"
                            Command="{x:Bind _viewModel.CurrentIllustration.ShowQrCodeCommand, Mode=OneWay}"
                            CommandParameter="{x:Bind ShowQrCodeTeachingTip}" />
                        <AppBarButton Command="{x:Bind _viewModel.CurrentImage.ShareCommand, Mode=OneWay}" />
                    </CommandBar>
                    <TextBlock
                        Grid.Column="2"
                        Style="{StaticResource TextBlockStyle}"
                        Visibility="{x:Bind _viewModel.CurrentIllustration.IsManga, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
                        <Run Text="{x:Bind _viewModel.CurrentPageIndex, Converter={StaticResource DisplayIndexConverter}, Mode=OneWay}" />
                        <Run Text="/" />
                        <Run Text="{x:Bind _viewModel.PageCount, Mode=OneWay}" />
                    </TextBlock>
                    <CommandBar
                        x:Name="IllustrationViewerSubCommandBar"
                        Grid.Column="3"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        DefaultLabelPosition="Collapsed">
                        <AppBarButton Width="{StaticResource CollapsedAppBarButtonWidth}" Command="{x:Bind _viewModel.FullScreenCommand}" />
                        <AppBarButton Width="{StaticResource CollapsedAppBarButtonWidth}" Command="{x:Bind _viewModel.CurrentImage.RestoreResolutionCommand, Mode=OneWay}" />
                        <AppBarButton Width="{StaticResource CollapsedAppBarButtonWidth}" Command="{x:Bind _viewModel.CurrentImage.ZoomOutCommand, Mode=OneWay}" />
                        <AppBarButton Width="{StaticResource CollapsedAppBarButtonWidth}" Command="{x:Bind _viewModel.CurrentImage.ZoomInCommand, Mode=OneWay}" />
                    </CommandBar>
                    <TextBlock
                        Grid.Column="4"
                        Width="60"
                        Margin="-5,-3,0,0"
                        Style="{StaticResource TextBlockStyle}"
                        Text="{x:Bind _viewModel.CurrentImage.Scale, Converter={StaticResource NumberToPercentageConverter}, ConverterParameter=2, Mode=OneWay}"
                        ToolTipService.ToolTip="{x:Bind _viewModel.CurrentImage.Scale, Converter={StaticResource NumberToPercentageConverter}, ConverterParameter=2, Mode=OneWay}" />
                    <TeachingTip
                        x:Name="GenerateLinkTeachingTip"
                        x:Uid="/IllustrateViewerPage/GenerateLinkToThisPageButtonTeachingTip"
                        Grid.Column="0"
                        ActionButtonClick="GenerateLinkToThisPageButtonTeachingTip_OnActionButtonClick"
                        Tag="{x:Bind GenerateLinkButton}">
                        <TeachingTip.HeroContent>
                            <Image
                                Loading="Image_OnLoading"
                                Source="ms-appx:///Assets/Images/illust-app-link-sample.png"
                                Tag="{x:Bind GenerateLinkTeachingTip}" />
                        </TeachingTip.HeroContent>
                    </TeachingTip>
                    <TeachingTip
                        x:Name="ShowQrCodeTeachingTip"
                        x:Uid="/IllustrateViewerPage/QrCodeTeachingTip"
                        Grid.Column="0"
                        IsLightDismissEnabled="True"
                        Tag="{x:Bind ShowQrCodeButton}">
                        <TeachingTip.HeroContent>
                            <Image Loading="Image_OnLoading" Tag="{x:Bind ShowQrCodeTeachingTip}" />
                        </TeachingTip.HeroContent>
                    </TeachingTip>
                </Grid>
            </Grid>
        </Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Normal">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind _viewModel.IsFullScreen, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ImagePanel.Margin" Value="{StaticResource NormalMargin}" />
                        <Setter Target="TopCommandBarTranslation.Y" Value="0" />
                        <Setter Target="TitleControlButtonsColumn.Width" Value="150" />
                        <Setter Target="TitleBarArea.Background" Value="{x:Null}" />
                        <Setter Target="TitleBarBorder.Background" Value="{x:Null}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FullScreen">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind _viewModel.IsFullScreen, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ImagePanel.Margin" Value="{StaticResource FullScreenMargin}" />
                        <Setter Target="TopCommandBarTranslation.Y" Value="-48" />
                        <Setter Target="TitleControlButtonsColumn.Width" Value="0" />
                        <Setter Target="TitleBarArea.Background" Value="{StaticResource PixevalAppAcrylicBrush}" />
                        <Setter Target="TitleBarBorder.Background" Value="{StaticResource TransparentBrush}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </SplitView>
</controls:SupportCustomTitleBarDragRegionPage>
