<controls:EnhancedWindowPage
    x:Class="Pixeval.Pages.IllustrationViewer.IllustrationViewerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Pixeval.Controls"
    xmlns:controls1="using:CommunityToolkit.WinUI.Controls"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:flyoutContent="using:Pixeval.Controls.FlyoutContent"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:media="using:Microsoft.Xaml.Interactions.Media"
    xmlns:triggers="using:Pixeval.Util.Triggers"
    xmlns:winUi="using:FluentIcons.WinUI"
    xmlns:windowing="using:Pixeval.Controls.Windowing"
    KeyboardAcceleratorPlacementMode="Hidden"
    Loaded="IllustrationViewerPage_OnLoaded"
    Unloaded="IllustrationViewerPage_OnUnloaded"
    mc:Ignorable="d">
    <controls:EnhancedWindowPage.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Default">
                    <SolidColorBrush x:Key="BottomBarInfoForeground">#9F9F9F</SolidColorBrush>
                    <SolidColorBrush x:Key="BottomBarBackground">#FCF8F5</SolidColorBrush>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Light">
                    <SolidColorBrush x:Key="BottomBarInfoForeground">#9F9F9F</SolidColorBrush>
                    <SolidColorBrush x:Key="BottomBarBackground">#FCF8F5</SolidColorBrush>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <SolidColorBrush x:Key="BottomBarInfoForeground">#7F7F7F</SolidColorBrush>
                    <SolidColorBrush x:Key="BottomBarBackground">#2A2725</SolidColorBrush>
                </ResourceDictionary>
                <ResourceDictionary x:Key="HighContrast">
                    <SolidColorBrush x:Key="BottomBarInfoForeground">#7F7F7F</SolidColorBrush>
                    <SolidColorBrush x:Key="BottomBarBackground">#2A2725</SolidColorBrush>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>

            <Thickness x:Key="NormalMargin">0,48,0,0</Thickness>
            <AcrylicBrush
                x:Key="BottomCommandSectionBackground"
                FallbackColor="{StaticResource SecondaryAccentColor}"
                TintColor="{StaticResource SecondaryAccentColor}"
                TintLuminosityOpacity="0.8"
                TintOpacity="0.8" />
            <Style
                x:Key="TextBlockStyle"
                BasedOn="{StaticResource CaptionStrongTextBlockStyle}"
                TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalTextAlignment" Value="Center" />
                <Setter Property="TextAlignment" Value="Center" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            </Style>
        </ResourceDictionary>
    </controls:EnhancedWindowPage.Resources>
    <controls:EnhancedWindowPage.KeyboardAccelerators>
        <KeyboardAccelerator Key="Escape" Invoked="ExitFullScreenKeyboardAccelerator_OnInvoked" />
        <KeyboardAccelerator Key="Left" Invoked="PrevButton_OnClicked" />
        <KeyboardAccelerator Key="Right" Invoked="NextButton_OnClicked" />
        <KeyboardAccelerator Key="Up" Invoked="PrevButton_OnRightTapped" />
        <KeyboardAccelerator Key="Down" Invoked="NextButton_OnRightTapped" />
    </controls:EnhancedWindowPage.KeyboardAccelerators>
    <Grid>
        <controls:WorkViewerSplitView
            x:Name="EntryViewerSplitView"
            Margin="{StaticResource NormalMargin}"
            MenuItemsSource="{x:Bind _viewModel.Tags}">
            <controls:WorkViewerSplitView.PaneContent>
                <Grid Background="Transparent">
                    <Frame
                        x:Name="IllustrationImageShowcaseFrame"
                        Grid.Row="0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Tapped="IllustrationImageShowcaseFrame_OnTapped" />
                    <controls1:DockPanel LastChildFill="False">
                        <controls:PageButton
                            Width="150"
                            controls1:DockPanel.Dock="Left"
                            ButtonClick="PrevButton_OnClicked"
                            ButtonRightTapped="PrevButton_OnRightTapped"
                            ButtonVisibility="{x:Bind controls:C.IsNotNullToVisibility(_viewModel.PrevButtonText), Mode=OneWay}"
                            IsPrev="True"
                            ToolTip="{x:Bind _viewModel.PrevButtonText, Mode=OneWay}" />
                        <controls:PageButton
                            Width="150"
                            controls1:DockPanel.Dock="Right"
                            ButtonClick="NextButton_OnClicked"
                            ButtonRightTapped="NextButton_OnRightTapped"
                            ButtonVisibility="{x:Bind controls:C.IsNotNullToVisibility(_viewModel.NextButtonText), Mode=OneWay}"
                            IsPrev="False"
                            ToolTip="{x:Bind _viewModel.NextButtonText, Mode=OneWay}" />
                    </controls1:DockPanel>

                    <!--  工具栏的识别区  -->
                    <StackPanel
                        x:Name="BottomCommandSection"
                        Margin="0,0,0,20"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom"
                        Spacing="20">
                        <StackPanel.TranslationTransition>
                            <Vector3Transition Duration="0:0:0.300" />
                        </StackPanel.TranslationTransition>
                        <Grid
                            Width="600"
                            Height="200"
                            Padding="50"
                            Background="Transparent"
                            Opacity="0">
                            <Grid.OpacityTransition>
                                <ScalarTransition />
                            </Grid.OpacityTransition>
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="PointerEntered">
                                    <core:ChangePropertyAction PropertyName="Opacity" Value="1" />
                                </core:EventTriggerBehavior>
                                <core:EventTriggerBehavior EventName="PointerExited">
                                    <core:ChangePropertyAction PropertyName="Opacity" Value="0" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                            <!--  ReSharper disable once UnusedMember.Local  -->
                            <Border
                                x:Name="CommandBorder"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Bottom"
                                Background="{StaticResource BottomCommandSectionBackground}"
                                BorderBrush="{StaticResource SecondaryAccentBorderBrush}"
                                BorderThickness="0.5"
                                CornerRadius="{ThemeResource ControlCornerRadius}"
                                Opacity="0.7"
                                Translation="0,0,30">
                                <Border.Shadow>
                                    <ThemeShadow x:Name="CommandBorderDropShadow" />
                                </Border.Shadow>
                                <Border.OpacityTransition>
                                    <ScalarTransition />
                                </Border.OpacityTransition>
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="PointerEntered">
                                        <core:ChangePropertyAction PropertyName="Opacity" Value="1" />
                                    </core:EventTriggerBehavior>
                                    <core:EventTriggerBehavior EventName="PointerExited">
                                        <core:ChangePropertyAction PropertyName="Opacity" Value="0.7" />
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                                <controls1:DockPanel>
                                    <PipsPager
                                        x:Name="PipsPager"
                                        Margin="5"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        controls1:DockPanel.Dock="Top"
                                        MaxVisiblePips="10"
                                        NextButtonVisibility="Visible"
                                        NumberOfPages="{x:Bind _viewModel.PageCount, Mode=OneWay}"
                                        PreviousButtonVisibility="Visible"
                                        SelectedPageIndex="{x:Bind _viewModel.CurrentPageIndex, Mode=TwoWay}"
                                        Visibility="{x:Bind controls:C.ToVisibility(_viewModel.CurrentIllustration.IsManga), Mode=OneWay}" />
                                    <CommandBar DefaultLabelPosition="Collapsed" OverflowButtonVisibility="Collapsed">
                                        <AppBarButton
                                            Command="{x:Bind _viewModel.CurrentIllustration.BookmarkCommand, Mode=OneWay}"
                                            CommandParameter="{x:Bind _viewModel.CurrentImage.DownloadParameter, Mode=OneWay}"
                                            IsEnabled="{x:Bind _viewModel.CurrentImage.LoadSuccessfully, Mode=OneWay}" />
                                        <AppBarButton Command="{x:Bind _viewModel.CurrentImage.RotateCounterclockwiseCommand, Mode=OneWay}" />
                                        <AppBarToggleButton Command="{x:Bind _viewModel.CurrentImage.MirrorCommand, Mode=OneWay}" IsChecked="{x:Bind _viewModel.CurrentImage.IsMirrored, Mode=OneWay}" />
                                        <AppBarButton Command="{x:Bind _viewModel.CurrentImage.RotateClockwiseCommand, Mode=OneWay}" />
                                        <AppBarButton
                                            Command="{x:Bind _viewModel.CurrentPage.SaveCommand, Mode=OneWay}"
                                            CommandParameter="{x:Bind _viewModel.CurrentImage.DownloadParameter, Mode=OneWay}"
                                            IsEnabled="{x:Bind _viewModel.CurrentImage.LoadSuccessfully, Mode=OneWay}" />
                                        <AppBarButton
                                            Command="{x:Bind _viewModel.CurrentIllustration.MangaSaveCommand, Mode=OneWay}"
                                            CommandParameter="{x:Bind HWnd}"
                                            Visibility="{x:Bind controls:C.ToVisibility(_viewModel.CurrentIllustration.IsManga), Mode=OneWay}" />
                                    </CommandBar>
                                </controls1:DockPanel>
                            </Border>
                        </Grid>
                        <Grid
                            Margin="150,0"
                            HorizontalAlignment="Center"
                            Background="{StaticResource BottomCommandSectionBackground}"
                            BorderBrush="{StaticResource SecondaryAccentBorderBrush}"
                            BorderThickness="0.5"
                            CornerRadius="{ThemeResource ControlCornerRadius}"
                            Translation="0,0,30">
                            <Grid.Shadow>
                                <ThemeShadow x:Name="ThumbnailListDropShadow" />
                            </Grid.Shadow>
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="PointerEntered">
                                    <core:ChangePropertyAction
                                        PropertyName="PointerNotInArea"
                                        TargetObject="{x:Bind}"
                                        Value="false" />
                                </core:EventTriggerBehavior>
                                <core:EventTriggerBehavior EventName="PointerExited">
                                    <core:ChangePropertyAction
                                        PropertyName="PointerNotInArea"
                                        TargetObject="{x:Bind}"
                                        Value="true" />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                            <controls:AdvancedItemsView
                                x:Name="ThumbnailItemsView"
                                Margin="5"
                                Padding="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                ItemsSource="{x:Bind _viewModel.Illustrations}"
                                LayoutType="HorizontalStack"
                                MinItemHeight="80"
                                MinItemWidth="80"
                                PreviewKeyDown="ThumbnailItemsView_OnPreviewKeyDown"
                                SelectedIndex="{x:Bind _viewModel.CurrentIllustrationIndex, Mode=TwoWay}"
                                SelectionMode="Single">
                                <controls:AdvancedItemsView.ItemTemplate>
                                    <DataTemplate x:DataType="controls:IllustrationItemViewModel">
                                        <ItemContainer Width="80" Height="80">
                                            <controls:LazyImage
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                DataContext="{x:Bind}"
                                                DataContextChanged="FrameworkElement_OnDataContextChanged"
                                                Source="{x:Bind ThumbnailSource, Mode=OneWay}" />
                                        </ItemContainer>
                                    </DataTemplate>
                                </controls:AdvancedItemsView.ItemTemplate>
                                <controls:AdvancedItemsView.ItemTransitionProvider>
                                    <LinedFlowLayoutItemCollectionTransitionProvider />
                                </controls:AdvancedItemsView.ItemTransitionProvider>
                            </controls:AdvancedItemsView>
                        </Grid>
                    </StackPanel>

                    <Grid
                        Height="45"
                        VerticalAlignment="Bottom"
                        Background="{ThemeResource BottomBarBackground}">
                        <StackPanel
                            MaxWidth="310"
                            Margin="0,0,275,0"
                            HorizontalAlignment="Left"
                            Orientation="Horizontal">
                            <AppBarToggleButton
                                HorizontalAlignment="Center"
                                Command="{x:Bind _viewModel.InfoAndCommentsCommand}"
                                IsChecked="{x:Bind EntryViewerSplitView.IsPaneOpen, Mode=TwoWay}"
                                IsCompact="True"
                                LabelPosition="Collapsed" />
                            <AppBarSeparator Height="35" />
                            <winUi:SymbolIcon
                                Margin="10,0,0,0"
                                HorizontalAlignment="Center"
                                FontSize="14"
                                Foreground="{ThemeResource BottomBarInfoForeground}"
                                Symbol="SlideGrid" />
                            <TextBlock
                                MaxWidth="80"
                                Margin="8,0,0,2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{ThemeResource BottomBarInfoForeground}"
                                Text="{x:Bind _viewModel.GetCurrentIllustrationDimensionText(_viewModel.CurrentPageIndex), Mode=OneWay}"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap" />
                            <AppBarSeparator Height="35" Margin="8,0,0,0" />
                            <winUi:SymbolIcon
                                Margin="10,0,0,0"
                                HorizontalAlignment="Center"
                                FontSize="14"
                                Foreground="{ThemeResource BottomBarInfoForeground}"
                                Symbol="AppTitle" />
                            <TextBlock
                                MaxWidth="100"
                                Margin="8,0,0,2"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Foreground="{ThemeResource BottomBarInfoForeground}"
                                Text="{x:Bind _viewModel.CurrentIllustration.Title, Mode=OneWay}"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap" />
                            <AppBarSeparator Height="35" Margin="10,0,0,0" />
                        </StackPanel>

                        <TextBlock
                            MaxHeight="45"
                            Margin="310,0,375,0"
                            Style="{StaticResource TextBlockStyle}"
                            Text="{x:Bind _viewModel.AdditionalText, Mode=OneWay}"
                            TextWrapping="WrapWholeWords"
                            Visibility="{x:Bind _viewModel.AdditionalTextBlockVisible, Mode=OneWay}" />

                        <StackPanel
                            Margin="320,10,375,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            Visibility="{x:Bind _viewModel.UpscalerProgressBarVisible, Mode=OneWay}">
                            <ProgressBar Value="{x:Bind _viewModel.UpscalerProgress, Mode=OneWay}" />
                            <TextBlock
                                Margin="0,2,0,0"
                                Style="{StaticResource CaptionTextBlockStyle}"
                                Text="{x:Bind _viewModel.UpscalerProgressText}" />
                        </StackPanel>
                        <StackPanel
                            Width="350"
                            Margin="0,0,10,0"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal">
                            <TextBlock
                                FontSize="15"
                                Style="{StaticResource TextBlockStyle}"
                                Visibility="{x:Bind controls:C.ToVisibility(_viewModel.CurrentIllustration.IsManga), Mode=OneWay}">
                                <Run Text="{x:Bind controls:C.PlusOneToString(_viewModel.CurrentPageIndex), Mode=OneWay}" />
                                <Run Text="/" />
                                <Run Text="{x:Bind _viewModel.PageCount, Mode=OneWay}" />
                            </TextBlock>
                            <AppBarSeparator Height="35" Margin="10,0,0,0" />
                            <AppBarButton
                                x:Name="UpscaleButton"
                                Click="UpscaleButton_OnTapped"
                                Icon="{winUi:SymbolIcon Symbol=EyeTracking}"
                                IsCompact="True"
                                LabelPosition="Collapsed" />
                            <TeachingTip
                                x:Name="UpscaleTeachingTip"
                                x:Uid="/EntryViewerPage/UpscaleTeachingTip"
                                IconSource="{winUi:SymbolIconSource Symbol=CommentNote}"
                                IsLightDismissEnabled="True"
                                Target="{x:Bind UpscaleButton}" />
                            <AppBarSeparator Height="35" />
                            <AppBarButton
                                Command="{x:Bind _viewModel.FullScreenCommand}"
                                IsCompact="True"
                                LabelPosition="Collapsed" />
                            <AppBarButton
                                Command="{x:Bind _viewModel.CurrentImage.RestoreResolutionCommand, Mode=OneWay}"
                                IsCompact="True"
                                LabelPosition="Collapsed" />
                            <AppBarButton
                                Command="{x:Bind _viewModel.CurrentImage.ZoomOutCommand, Mode=OneWay}"
                                IsCompact="True"
                                LabelPosition="Collapsed" />
                            <AppBarButton
                                Command="{x:Bind _viewModel.CurrentImage.ZoomInCommand, Mode=OneWay}"
                                IsCompact="True"
                                LabelPosition="Collapsed" />
                            <AppBarSeparator Height="35" Margin="0,0,10,0" />
                            <TextBlock
                                Width="60"
                                FontSize="15"
                                Style="{StaticResource TextBlockStyle}"
                                Text="{x:Bind controls:C.ToPercentageString(_viewModel.CurrentImage.Scale, 2), Mode=OneWay}"
                                TextWrapping="NoWrap"
                                ToolTipService.ToolTip="{x:Bind controls:C.ToPercentageString(_viewModel.CurrentImage.Scale, 2), Mode=OneWay}" />
                        </StackPanel>
                    </Grid>
                </Grid>
            </controls:WorkViewerSplitView.PaneContent>
        </controls:WorkViewerSplitView>
        <!--  ReSharper disable once UnusedMember.Local  -->
        <Grid
            x:Name="TitleBarBorder"
            Height="100"
            VerticalAlignment="Top">
            <interactivity:Interaction.Behaviors>
                <triggers:EventWithConditionTriggerBehavior EventName="PointerEntered" IsActive="{x:Bind _viewModel.IsFullScreen, Mode=OneWay}">
                    <media:ControlStoryboardAction>
                        <media:ControlStoryboardAction.Storyboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="TopCommandBarTranslation"
                                    Storyboard.TargetProperty="Y"
                                    To="0">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="7" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </media:ControlStoryboardAction.Storyboard>
                    </media:ControlStoryboardAction>
                </triggers:EventWithConditionTriggerBehavior>
                <triggers:EventWithConditionTriggerBehavior EventName="PointerExited" IsActive="{x:Bind _viewModel.IsFullScreen, Mode=OneWay}">
                    <media:ControlStoryboardAction>
                        <media:ControlStoryboardAction.Storyboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="TopCommandBarTranslation"
                                    Storyboard.TargetProperty="Y"
                                    To="{StaticResource NegativeTitleBarHeight}">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="7" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </media:ControlStoryboardAction.Storyboard>
                    </media:ControlStoryboardAction>
                </triggers:EventWithConditionTriggerBehavior>
            </interactivity:Interaction.Behaviors>
            <!--  ReSharper disable once UnusedMember.Local  -->
            <controls1:TitleBar
                x:Name="TitleBarArea"
                Title="{x:Bind _viewModel.CurrentIllustration.Title, Mode=OneWay}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                CompactStateBreakpoint="1120"
                DisplayMode="Tall                 "
                Window="{x:Bind windowing:WindowFactory.GetForkedWindows(HWnd)}">
                <controls1:TitleBar.Icon>
                    <ImageIcon Source="ms-appx:///Assets/Images/logo.svg" Visibility="{x:Bind IsLogoVisible()}" />
                </controls1:TitleBar.Icon>
                <controls1:TitleBar.RenderTransform>
                    <TranslateTransform x:Name="TopCommandBarTranslation" />
                </controls1:TitleBar.RenderTransform>
                <controls1:TitleBar.Content>
                    <CommandBar Margin="0,-4" DefaultLabelPosition="Collapsed">
                        <AppBarButton Command="{x:Bind _viewModel.CurrentImage.PlayGifCommand, Mode=OneWay}" Visibility="{x:Bind controls:C.ToVisibility(_viewModel.CurrentIllustration.IsUgoira), Mode=OneWay}" />
                        <AppBarSeparator />
                        <AppBarButton
                            Command="{x:Bind _viewModel.CurrentPage.CopyCommand, Mode=OneWay}"
                            CommandParameter="{x:Bind _viewModel.CurrentImage.DownloadParameter, Mode=OneWay}"
                            IsEnabled="{x:Bind _viewModel.CurrentImage.LoadSuccessfully, Mode=OneWay}" />
                        <AppBarButton
                            Command="{x:Bind _viewModel.CurrentPage.SaveCommand, Mode=OneWay}"
                            CommandParameter="{x:Bind _viewModel.CurrentImage.DownloadParameter, Mode=OneWay}"
                            IsEnabled="{x:Bind _viewModel.CurrentImage.LoadSuccessfully, Mode=OneWay}" />
                        <AppBarButton
                            Command="{x:Bind _viewModel.CurrentPage.SaveAsCommand, Mode=OneWay}"
                            CommandParameter="{x:Bind _viewModel.CurrentImage.DownloadParameter, Mode=OneWay}"
                            IsEnabled="{x:Bind _viewModel.CurrentImage.LoadSuccessfully, Mode=OneWay}" />
                        <AppBarButton
                            Command="{x:Bind _viewModel.CurrentIllustration.MangaSaveCommand, Mode=OneWay}"
                            CommandParameter="{x:Bind HWnd}"
                            Visibility="{x:Bind controls:C.ToVisibility(_viewModel.CurrentIllustration.IsManga), Mode=OneWay}" />
                        <AppBarButton
                            Command="{x:Bind _viewModel.CurrentIllustration.MangaSaveAsCommand, Mode=OneWay}"
                            CommandParameter="{x:Bind HWnd}"
                            Visibility="{x:Bind controls:C.ToVisibility(_viewModel.CurrentIllustration.IsManga), Mode=OneWay}" />
                        <AppBarSeparator />
                        <AppBarButton Command="{x:Bind _viewModel.CurrentImage.SetAsCommand, Mode=OneWay}">
                            <AppBarButton.Flyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem Command="{x:Bind _viewModel.CurrentImage.SetAsBackgroundCommand, Mode=OneWay}" />
                                    <MenuFlyoutItem Command="{x:Bind _viewModel.CurrentImage.SetAsLockScreenCommand, Mode=OneWay}" />
                                </MenuFlyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>
                        <AppBarSeparator />
                        <AppBarButton
                            x:Name="AddToBookmarkButton"
                            Click="AddToBookmarkButton_OnClicked"
                            Command="{x:Bind _viewModel.AddToBookmarkCommand}"
                            CommandParameter="{x:Bind _viewModel.CurrentImage.DownloadParameter, Mode=OneWay}" />
                        <AppBarButton Command="{x:Bind _viewModel.CurrentIllustration.GenerateLinkCommand, Mode=OneWay}" CommandParameter="{x:Bind HWnd}" />
                        <AppBarButton Command="{x:Bind _viewModel.CurrentIllustration.GenerateWebLinkCommand, Mode=OneWay}" CommandParameter="{x:Bind HWnd}" />
                        <AppBarButton Command="{x:Bind _viewModel.CurrentIllustration.OpenInWebBrowserCommand, Mode=OneWay}" />
                        <AppBarButton
                            x:Name="ShowQrCodeButton"
                            Command="{x:Bind _viewModel.CurrentIllustration.ShowQrCodeCommand, Mode=OneWay}"
                            CommandParameter="{x:Bind ShowQrCodeTeachingTip}" />
                        <AppBarButton Command="{x:Bind _viewModel.CurrentImage.ShareCommand, Mode=OneWay}" />
                    </CommandBar>
                </controls1:TitleBar.Content>
            </controls1:TitleBar>
        </Grid>
        <TeachingTip
            x:Name="ShowQrCodeTeachingTip"
            x:Uid="/EntryViewerPage/QrCodeTeachingTip"
            IsLightDismissEnabled="True"
            Tag="{x:Bind ShowQrCodeButton}">
            <TeachingTip.HeroContent>
                <Image Loading="Content_OnLoading" Tag="{x:Bind ShowQrCodeTeachingTip}" />
            </TeachingTip.HeroContent>
        </TeachingTip>
        <TeachingTip
            x:Name="AddToBookmarkTeachingTip"
            x:Uid="/EntryViewerPage/AddToBookmarkTeachingTip"
            CloseButtonClick="AddToBookmarkTeachingTip_OnCloseButtonClick"
            IsLightDismissEnabled="True"
            Tag="{x:Bind AddToBookmarkButton}">
            <flyoutContent:BookmarkTagSelector
                x:Name="BookmarkTagSelector"
                MaxHeight="{StaticResource TeachingTipContentMaxHeightWithTarget}"
                Loading="Content_OnLoading"
                Tag="{x:Bind AddToBookmarkTeachingTip}"
                Type="IllustAndManga" />
        </TeachingTip>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Normal">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind controls:C.Negation(_viewModel.IsFullScreen), Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="EntryViewerSplitView.Margin" Value="{StaticResource NormalMargin}" />
                        <Setter Target="TopCommandBarTranslation.Y" Value="0" />
                        <Setter Target="TitleBarArea.Background" Value="{x:Null}" />
                        <Setter Target="TitleBarBorder.Background" Value="{x:Null}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FullScreen">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind _viewModel.IsFullScreen, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="EntryViewerSplitView.Margin" Value="0" />
                        <Setter Target="TopCommandBarTranslation.Y" Value="{StaticResource NegativeTitleBarHeight}" />
                        <Setter Target="TitleBarArea.Background" Value="{StaticResource PixevalAppAcrylicBrush}" />
                        <Setter Target="TitleBarBorder.Background" Value="Transparent" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</controls:EnhancedWindowPage>
