<controls:SupportCustomTitleBarDragRegionPage
    x:Class="Pixeval.Pages.NovelViewer.NovelViewerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Pixeval.Controls"
    xmlns:controls1="using:CommunityToolkit.WinUI.Controls"
    xmlns:controls2="using:WinUI3Utilities.Controls"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    xmlns:converters1="using:Pixeval.Controls.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:flyoutContent="using:Pixeval.Controls.FlyoutContent"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:Pixeval.Pages.NovelViewer"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:media="using:Microsoft.Xaml.Interactions.Media"
    xmlns:options="using:Pixeval.Options"
    xmlns:triggers="using:Pixeval.Util.Triggers"
    xmlns:winUi="using:CommunityToolkit.WinUI"
    KeyboardAcceleratorPlacementMode="Hidden"
    Loaded="NovelViewerPage_OnLoaded"
    Unloaded="NovelViewerPage_OnUnloaded"
    mc:Ignorable="d">
    <controls:SupportCustomTitleBarDragRegionPage.Resources>
        <converters:BoolNegationConverter x:Key="BoolNegationConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters1:NullableToVisibilityConverter x:Key="NullableToVisibilityConverter" />
        <converters1:UIntToColorConverter x:Key="UIntToColorConverter" />
        <converters1:DisplayIndexConverter x:Key="DisplayIndexConverter" />
        <converters1:UIntToBrushConverter x:Key="UIntToBrushConverter" />
        <converters1:FontWeightConverter x:Key="FontWeightConverter" />
        <converters1:StringToFontFamilyConverter x:Key="StringToFontFamilyConverter" />
        <converters1:BoolNegationToVisibilityConverter x:Key="BoolNegationToVisibilityConverter" />
        <Thickness x:Key="NormalMargin">0,48,0,0</Thickness>
        <AcrylicBrush
            x:Key="BottomCommandSectionBackground"
            FallbackColor="{StaticResource SecondaryAccentColor}"
            TintColor="{StaticResource SecondaryAccentColor}"
            TintLuminosityOpacity="0.8"
            TintOpacity="0.8" />
        <Style
            x:Key="TextBlockStyle"
            BasedOn="{StaticResource BaseTextBlockStyle}"
            TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="{StaticResource PixevalContentFontSize}" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="HorizontalTextAlignment" Value="Center" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        </Style>
        <Style x:Name="ColorPickerStyle" TargetType="controls1:ColorPicker">
            <Setter Property="IsMoreButtonVisible" Value="True" />
            <Setter Property="IsAlphaEnabled" Value="True" />
        </Style>
    </controls:SupportCustomTitleBarDragRegionPage.Resources>
    <controls:SupportCustomTitleBarDragRegionPage.KeyboardAccelerators>
        <KeyboardAccelerator Key="Escape" Invoked="ExitFullScreenKeyboardAccelerator_OnInvoked" />
        <KeyboardAccelerator Key="Left" Invoked="PrevButton_OnTapped" />
        <KeyboardAccelerator Key="Right" Invoked="NextButton_OnTapped" />
        <KeyboardAccelerator Key="Up" Invoked="PrevButton_OnRightTapped" />
        <KeyboardAccelerator Key="Down" Invoked="NextButton_OnRightTapped" />
    </controls:SupportCustomTitleBarDragRegionPage.KeyboardAccelerators>
    <controls:WorkViewerSplitView
        x:Name="EntryViewerSplitView"
        MenuItemsSource="{x:Bind _viewModel.Tags}"
        RaiseSetTitleBarDragRegion="Placeholder_OnSizeChanged">
        <controls:WorkViewerSplitView.PaneContent>
            <SplitView
                x:Name="NovelSettingsPane"
                DisplayMode="Overlay"
                PanePlacement="Right">
                <SplitView.Pane>
                    <controls1:DockPanel>
                        <ContentPresenter Height="{StaticResource TitleBarHeight}" controls1:DockPanel.Dock="Top">
                            <TextBlock
                                x:Uid="/EntryViewerPage/NovelSettingsHeaderTextBlock"
                                Margin="20,0"
                                VerticalAlignment="Center"
                                Style="{StaticResource SubtitleTextBlockStyle}" />
                        </ContentPresenter>
                        <ScrollView>
                            <StackPanel Loaded="Panel_OnLoaded" />
                        </ScrollView>
                    </controls1:DockPanel>
                </SplitView.Pane>
                <!--  ReSharper disable once UnusedMember.Local  -->
                <Grid x:Name="NovelPresenterDockPanel" Background="{x:Bind _viewModel.NovelBackgroundEntry.Value, Converter={StaticResource UIntToBrushConverter}, Mode=OneWay}">
                    <!--  ReSharper disable once UnusedMember.Local  -->
                    <Grid x:Name="MainPanel" Margin="{StaticResource NormalMargin}">
                        <controls:DocumentViewer
                            x:Name="DocumentViewer"
                            ActualThemeChanged="{x:Bind _viewModel.OnFrameworkElementOnActualThemeChanged}"
                            CurrentPage="{x:Bind _viewModel.CurrentPageIndex, Mode=TwoWay}"
                            FontFamily="{x:Bind _viewModel.NovelFontFamilyEntry.Value, Converter={StaticResource StringToFontFamilyConverter}, Mode=OneWay}"
                            FontSize="{x:Bind _viewModel.NovelFontSizeEntry.Value, Mode=OneWay}"
                            FontWeight="{x:Bind _viewModel.NovelFontWeightEntry.Value, Converter={StaticResource FontWeightConverter}, Mode=OneWay}"
                            Foreground="{x:Bind _viewModel.NovelFontColorEntry.Value, Converter={StaticResource UIntToBrushConverter}, Mode=OneWay}"
                            LineHeight="{x:Bind _viewModel.NovelLineHeightEntry.Value, Mode=OneWay}"
                            NovelItem="{x:Bind _viewModel.CurrentNovel, Mode=OneWay}"
                            NovelMaxWidth="{x:Bind _viewModel.NovelMaxWidthEntry.Value, Mode=OneWay}"
                            PageCount="{x:Bind _viewModel.PageCount, Mode=TwoWay}"
                            Tapped="DocumentViewer_OnTapped" />

                        <Grid Visibility="{x:Bind DocumentViewer.IsLoading, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
                            <Rectangle Fill="{ThemeResource PixevalAppAcrylicBrush}" />
                            <StackPanel
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Spacing="10">
                                <ProgressRing
                                    Width="50"
                                    Height="50"
                                    IsIndeterminate="True" />
                                <TextBlock x:Uid="/EntryViewerPage/LoadingNovelTextBlock" FontSize="{StaticResource PixevalSubscriptFontSize}" />
                            </StackPanel>
                        </Grid>

                        <!--  滚动条的宽度  -->
                        <Grid Margin="0,0,15,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="150" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="135" />
                            </Grid.ColumnDefinitions>
                            <controls:PageButton
                                Grid.Column="0"
                                Width="150"
                                ButtonRightTapped="PrevButton_OnRightTapped"
                                ButtonTapped="PrevButton_OnTapped"
                                ButtonVisibility="{x:Bind _viewModel.PrevButtonText, Converter={StaticResource NullableToVisibilityConverter}, Mode=OneWay}"
                                IsPrev="True"
                                ToolTip="{x:Bind _viewModel.PrevButtonText, Mode=OneWay}" />
                            <controls:PageButton
                                Grid.Column="2"
                                Width="150"
                                ButtonRightTapped="NextButton_OnRightTapped"
                                ButtonTapped="NextButton_OnTapped"
                                ButtonVisibility="{x:Bind _viewModel.NextButtonText, Converter={StaticResource NullableToVisibilityConverter}, Mode=OneWay}"
                                IsPrev="False"
                                ToolTip="{x:Bind _viewModel.NextButtonText, Mode=OneWay}" />
                        </Grid>

                        <!--  工具栏的识别区  -->
                        <StackPanel
                            x:Name="BottomCommandSection"
                            Margin="0,0,0,20"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom"
                            Spacing="20">
                            <StackPanel.TranslationTransition>
                                <Vector3Transition Duration="0:0:0.300" />
                            </StackPanel.TranslationTransition>
                            <Grid
                                Width="600"
                                Height="200"
                                Padding="50"
                                Background="Transparent"
                                Opacity="0">
                                <Grid.OpacityTransition>
                                    <ScalarTransition />
                                </Grid.OpacityTransition>
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="PointerEntered">
                                        <core:ChangePropertyAction PropertyName="Opacity" Value="1" />
                                    </core:EventTriggerBehavior>
                                    <core:EventTriggerBehavior EventName="PointerExited">
                                        <core:ChangePropertyAction PropertyName="Opacity" Value="0" />
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                                <!--  ReSharper disable once UnusedMember.Local  -->
                                <Border
                                    x:Name="CommandBorder"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Bottom"
                                    Background="{StaticResource BottomCommandSectionBackground}"
                                    BorderBrush="{StaticResource SecondaryAccentBorderBrush}"
                                    BorderThickness="0.5"
                                    CornerRadius="{ThemeResource ControlCornerRadius}"
                                    Opacity="0.7"
                                    Translation="0,0,30">
                                    <Border.Shadow>
                                        <ThemeShadow x:Name="CommandBorderDropShadow" />
                                    </Border.Shadow>
                                    <Border.OpacityTransition>
                                        <ScalarTransition />
                                    </Border.OpacityTransition>
                                    <interactivity:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="PointerEntered">
                                            <core:ChangePropertyAction PropertyName="Opacity" Value="1" />
                                        </core:EventTriggerBehavior>
                                        <core:EventTriggerBehavior EventName="PointerExited">
                                            <core:ChangePropertyAction PropertyName="Opacity" Value="0.7" />
                                        </core:EventTriggerBehavior>
                                    </interactivity:Interaction.Behaviors>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <PipsPager
                                            x:Name="PipsPager"
                                            Grid.Row="0"
                                            Margin="5"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            MaxVisiblePips="10"
                                            NextButtonVisibility="Visible"
                                            NumberOfPages="{x:Bind DocumentViewer.PageCount, Mode=OneWay}"
                                            PreviousButtonVisibility="Visible"
                                            SelectedPageIndex="{x:Bind DocumentViewer.CurrentPage, Mode=TwoWay}"
                                            Visibility="{x:Bind DocumentViewer.IsMultiPage, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" />
                                        <CommandBar
                                            Grid.Row="1"
                                            HorizontalAlignment="Center"
                                            DefaultLabelPosition="Collapsed"
                                            OverflowButtonVisibility="Collapsed">
                                            <AppBarButton
                                                Command="{x:Bind _viewModel.CurrentNovel.BookmarkCommand, Mode=OneWay}"
                                                CommandParameter="{x:Bind DownloadParameter(DocumentViewer.ViewModel), Mode=OneWay}"
                                                IsEnabled="{x:Bind DocumentViewer.LoadSuccessfully, Mode=OneWay}" />
                                            <AppBarButton
                                                Command="{x:Bind _viewModel.CurrentNovel.SaveCommand, Mode=OneWay}"
                                                CommandParameter="{x:Bind DownloadParameter(DocumentViewer.ViewModel), Mode=OneWay}"
                                                IsEnabled="{x:Bind DocumentViewer.LoadSuccessfully, Mode=OneWay}" />
                                        </CommandBar>
                                    </Grid>
                                </Border>
                            </Grid>
                            <Grid
                                Margin="150,0"
                                HorizontalAlignment="Center"
                                Background="{StaticResource BottomCommandSectionBackground}"
                                BorderBrush="{StaticResource SecondaryAccentBorderBrush}"
                                BorderThickness="0.5"
                                CornerRadius="{ThemeResource ControlCornerRadius}"
                                Translation="0,0,30">
                                <Grid.Shadow>
                                    <ThemeShadow x:Name="ThumbnailListDropShadow" />
                                </Grid.Shadow>
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="PointerEntered">
                                        <core:ChangePropertyAction
                                            PropertyName="PointerNotInArea"
                                            TargetObject="{x:Bind}"
                                            Value="false" />
                                    </core:EventTriggerBehavior>
                                    <core:EventTriggerBehavior EventName="PointerExited">
                                        <core:ChangePropertyAction
                                            PropertyName="PointerNotInArea"
                                            TargetObject="{x:Bind}"
                                            Value="true" />
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                                <controls:AdvancedItemsView
                                    x:Name="ThumbnailItemsView"
                                    Margin="5"
                                    Padding="0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    ItemsSource="{x:Bind _viewModel.Novels}"
                                    LayoutType="HorizontalStack"
                                    MinItemHeight="80"
                                    MinItemWidth="80"
                                    PreviewKeyDown="ThumbnailItemsView_OnPreviewKeyDown"
                                    SelectedIndex="{x:Bind _viewModel.CurrentNovelIndex, Mode=TwoWay}"
                                    SelectionMode="Single">
                                    <controls:AdvancedItemsView.ItemTemplate>
                                        <DataTemplate x:DataType="controls:NovelItemViewModel">
                                            <ItemContainer Width="80" Height="80">
                                                <controls:LazyImage
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    DataContext="{x:Bind}"
                                                    DataContextChanged="FrameworkElement_OnDataContextChanged"
                                                    Source="{x:Bind ThumbnailSource, Mode=OneWay}" />
                                            </ItemContainer>
                                        </DataTemplate>
                                    </controls:AdvancedItemsView.ItemTemplate>
                                </controls:AdvancedItemsView>
                            </Grid>
                        </StackPanel>
                    </Grid>
                    <!--  ReSharper disable once UnusedMember.Local  -->
                    <Grid
                        x:Name="TitleBarBorder"
                        Height="100"
                        VerticalAlignment="Top">
                        <interactivity:Interaction.Behaviors>
                            <triggers:EventWithConditionTriggerBehavior EventName="PointerEntered" IsActive="{x:Bind _viewModel.IsFullScreen, Mode=OneWay}">
                                <media:ControlStoryboardAction>
                                    <media:ControlStoryboardAction.Storyboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="TopCommandBarTranslation"
                                                Storyboard.TargetProperty="Y"
                                                To="0">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="7" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </media:ControlStoryboardAction.Storyboard>
                                </media:ControlStoryboardAction>
                            </triggers:EventWithConditionTriggerBehavior>
                            <triggers:EventWithConditionTriggerBehavior EventName="PointerExited" IsActive="{x:Bind _viewModel.IsFullScreen, Mode=OneWay}">
                                <media:ControlStoryboardAction>
                                    <media:ControlStoryboardAction.Storyboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="TopCommandBarTranslation"
                                                Storyboard.TargetProperty="Y"
                                                To="{StaticResource NegativeTitleBarHeight}">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseOut" Exponent="7" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </media:ControlStoryboardAction.Storyboard>
                                </media:ControlStoryboardAction>
                            </triggers:EventWithConditionTriggerBehavior>
                        </interactivity:Interaction.Behaviors>

                        <!--  ReSharper disable once UnusedMember.Local  -->
                        <Grid
                            x:Name="TitleBarArea"
                            Height="{StaticResource TitleBarHeight}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top">
                            <Grid.RenderTransform>
                                <TranslateTransform x:Name="TopCommandBarTranslation" />
                            </Grid.RenderTransform>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <!--  ReSharper disable once UnusedMember.Local  -->
                                <ColumnDefinition x:Name="TitleControlButtonsColumn" Width="150" />
                            </Grid.ColumnDefinitions>
                            <controls:TitleBarIconText
                                x:Name="TitleBar"
                                Title="{x:Bind _viewModel.CurrentNovel.Title, Mode=OneWay}"
                                Grid.Column="0"
                                Visibility="{x:Bind EntryViewerSplitView.PinPane, Converter={StaticResource BoolNegationToVisibilityConverter}, Mode=OneWay}" />
                            <Rectangle
                                Grid.Column="1"
                                HorizontalAlignment="Stretch"
                                SizeChanged="Placeholder_OnSizeChanged" />
                            <CommandBar
                                x:Name="NovelViewerCommandBar"
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                DefaultLabelPosition="Collapsed">
                                <AppBarToggleButton
                                    Command="{x:Bind _viewModel.InfoAndCommentsCommand}"
                                    IsChecked="{x:Bind EntryViewerSplitView.IsPaneOpen, Mode=TwoWay}"
                                    RightTapped="OpenPane_OnRightTapped" />
                                <AppBarSeparator />
                                <AppBarButton
                                    Command="{x:Bind _viewModel.CurrentNovel.CopyCommand, Mode=OneWay}"
                                    CommandParameter="{x:Bind DownloadParameter(DocumentViewer.ViewModel), Mode=OneWay}"
                                    IsEnabled="{x:Bind DocumentViewer.LoadSuccessfully, Mode=OneWay}" />
                                <AppBarButton
                                    Command="{x:Bind _viewModel.CurrentNovel.SaveCommand, Mode=OneWay}"
                                    CommandParameter="{x:Bind DownloadParameter(DocumentViewer.ViewModel), Mode=OneWay}"
                                    IsEnabled="{x:Bind DocumentViewer.LoadSuccessfully, Mode=OneWay}" />
                                <AppBarButton
                                    Command="{x:Bind _viewModel.CurrentNovel.SaveAsCommand, Mode=OneWay}"
                                    CommandParameter="{x:Bind DownloadParameter(DocumentViewer.ViewModel), Mode=OneWay}"
                                    IsEnabled="{x:Bind DocumentViewer.LoadSuccessfully, Mode=OneWay}" />
                                <AppBarSeparator />
                                <AppBarButton
                                    x:Name="AddToBookmarkButton"
                                    Command="{x:Bind _viewModel.AddToBookmarkCommand}"
                                    Tapped="AddToBookmarkButton_OnTapped" />
                                <AppBarButton Command="{x:Bind _viewModel.CurrentNovel.GenerateLinkCommand, Mode=OneWay}" CommandParameter="{x:Bind HWnd}" />
                                <AppBarButton Command="{x:Bind _viewModel.CurrentNovel.GenerateWebLinkCommand, Mode=OneWay}" CommandParameter="{x:Bind HWnd}" />
                                <AppBarButton Command="{x:Bind _viewModel.CurrentNovel.OpenInWebBrowserCommand, Mode=OneWay}" />
                                <AppBarButton
                                    x:Name="ShowQrCodeButton"
                                    Command="{x:Bind _viewModel.CurrentNovel.ShowQrCodeCommand, Mode=OneWay}"
                                    CommandParameter="{x:Bind ShowQrCodeTeachingTip}" />
                                <AppBarToggleButton Command="{x:Bind _viewModel.NovelSettingsCommand}" IsChecked="{x:Bind NovelSettingsPane.IsPaneOpen, Mode=TwoWay}" />
                            </CommandBar>
                            <TextBlock
                                Grid.Column="2"
                                Style="{StaticResource TextBlockStyle}"
                                Visibility="{x:Bind DocumentViewer.IsMultiPage, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
                                <Run Text="{x:Bind DocumentViewer.CurrentPage, Converter={StaticResource DisplayIndexConverter}, Mode=OneWay}" />
                                <Run Text="/" />
                                <Run Text="{x:Bind DocumentViewer.PageCount, Mode=OneWay}" />
                            </TextBlock>
                            <CommandBar
                                x:Name="NovelViewerSubCommandBar"
                                Grid.Column="3"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                DefaultLabelPosition="Collapsed">
                                <AppBarButton Command="{x:Bind _viewModel.FullScreenCommand}" />
                            </CommandBar>
                            <TeachingTip
                                x:Name="ShowQrCodeTeachingTip"
                                x:Uid="/EntryViewerPage/QrCodeTeachingTip"
                                Grid.Column="0"
                                IsLightDismissEnabled="True"
                                Tag="{x:Bind ShowQrCodeButton}">
                                <TeachingTip.HeroContent>
                                    <Image Loading="Content_OnLoading" Tag="{x:Bind ShowQrCodeTeachingTip}" />
                                </TeachingTip.HeroContent>
                            </TeachingTip>
                            <TeachingTip
                                x:Name="AddToBookmarkTeachingTip"
                                x:Uid="/EntryViewerPage/AddToBookmarkTeachingTip"
                                Grid.Column="0"
                                CloseButtonClick="AddToBookmarkTeachingTip_OnCloseButtonClick"
                                IsLightDismissEnabled="True"
                                Tag="{x:Bind AddToBookmarkButton}">
                                <flyoutContent:BookmarkTagSelector
                                    x:Name="BookmarkTagSelector"
                                    MaxHeight="{StaticResource TeachingTipContentMaxHeightWithTarget}"
                                    Loading="Content_OnLoading"
                                    Tag="{x:Bind AddToBookmarkTeachingTip}"
                                    Type="Novel" />
                            </TeachingTip>
                        </Grid>
                    </Grid>
                </Grid>
            </SplitView>
        </controls:WorkViewerSplitView.PaneContent>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Normal">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind _viewModel.IsFullScreen, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MainPanel.Margin" Value="{StaticResource NormalMargin}" />
                        <Setter Target="TopCommandBarTranslation.Y" Value="0" />
                        <Setter Target="TitleControlButtonsColumn.Width" Value="150" />
                        <Setter Target="TitleBarArea.Background" Value="{x:Null}" />
                        <Setter Target="TitleBarBorder.Background" Value="{x:Null}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FullScreen">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind _viewModel.IsFullScreen, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MainPanel.Margin" Value="0" />
                        <Setter Target="TopCommandBarTranslation.Y" Value="{StaticResource NegativeTitleBarHeight}" />
                        <Setter Target="TitleControlButtonsColumn.Width" Value="0" />
                        <Setter Target="TitleBarArea.Background" Value="{StaticResource PixevalAppAcrylicBrush}" />
                        <Setter Target="TitleBarBorder.Background" Value="Transparent" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </controls:WorkViewerSplitView>
</controls:SupportCustomTitleBarDragRegionPage>
